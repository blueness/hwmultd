.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HWMULTD 1"
.TH HWMULTD 1 "2011-07-14" "HWMULTD(1)" "SYSTEM ADMINISTRATION COMMANDS"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
hwmultd \- multicast hardware information, or respond to mutlicasted
hardware information
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBhwmultd\fR [\-h] [\-v] [\-c \fIconfig\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBhwmultd\fR operates in one of two modes (or both).  As a server,
\&\fBhwmultd\fR monitors hardware information and multicasts it so that
other computers in the same multicast group can act accordingly.  As a
client, \fBhwmultd\fR listens to multicasted hardware information and acts
accordingly.  For example, one box (the server) can multicast entropy
while others listening (the clients) can add it to their own entropy
pools.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fBno option\fR" 4
.IX Item "no option"
This is the normal mode of operation.  \fBhmultd\fR reads its
configuration file, drops root privileges, opens its log and
pid file and forks into the background as a daemon.
.IP "\fB\-c config\fR" 4
.IX Item "-c config"
Use an alternate configuration file instead of the default
\&\fI/etc/hwmultd/hwmultd.conf\fR.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Do not fork into the background.  Print out information about
command line options and exit.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Do not fork into the background.  Print out version information
and exit.
.SH "SIGNALS"
.IX Header "SIGNALS"
\&\fBhwmultd\fR responds to three signals \fI\s-1SIGTERM\s0\fR, \fI\s-1SIGHUP\s0\fR and
\&\fI\s-1SIGUSR1\s0\fR.  All others blockable signals are masked.
.IP "\fI\s-1SIGTERM\s0\fR" 4
.IX Item "SIGTERM"
Exit cleanly.  Close all sockets, file descriptors and
unlink the pid file.
.IP "\fI\s-1SIGHUP\s0\fR" 4
.IX Item "SIGHUP"
Reread the configuration file(s) and, depending on what mode
\&\fBhwmultd\fR is running in, restart the multicast client, server
or both.
.IP "\fI\s-1SIGUSR1\s0\fR" 4
.IX Item "SIGUSR1"
Reset the plugin hardware.  Depending on how the plugin works
with its hardware, this signal will instruct it to close and
reopen the hardware device.  This is useful in case the hardware
has gotten into a bad state.
.SH "FILES"
.IX Header "FILES"
.IP "\fI/etc/hwmultd/hmultd.conf\fR" 4
.IX Item "/etc/hwmultd/hmultd.conf"
The daemon's main configuration file.  Each line is interpreted as
case sensitive, white space delimited, \fBkey\fR \fBvalue\fR pairs.  Malformed
lines are ignored.  Anything after an octothorpe '#' is also ignored.
A missing \fBkey\fR \fBvalue\fR's is interpreted as \*(L"use the default value\*(R".
.IP "\fI/etc/hwmultd/plugin_mode.conf\fR" 4
.IX Item "/etc/hwmultd/plugin_mode.conf"
Per plugin configuration file(s).  Its format is the same as that of
the main configuration file.  The filename \fIplugin_mode.conf\fR
must correspond to the filename \fIplugin_molde.so\fR of the plugin that
consumes it.
.IP "\fI/usr/lib/hwmultd/\fR" 4
.IX Item "/usr/lib/hwmultd/"
The directory where \fBhwmultd\fR searches for its plugins.  Plugin
names have the form \fIplugin_mode.so\fR where \fIplugin\fR is the name,
and \fImode\fR is either \fIhw\fR for server mode (ie. read hardware and
multicast), or \fIcl\fR for client mode (ie. read multicated information
and act accordingly).
.Sp
The number of plugins is growing.  Current plugins are
.RS 4
.IP "\fBentropy_hw.so\fR" 4
.IX Item "entropy_hw.so"
This server plugin reads some entropy device, by default
\&\fI/dev/urandom\fR, and multicasts some random data.  It is
configured by \fBentropy_hw.conf\fR which takes two options,
\&\fIDevice\fR which specifies the device, and \fIBytes\fR which
specifies the number of bytes to read per cycle \-\-\- see
the \fBTiming\fR option in \fB\s-1MAIN\s0 \s-1CONFIGURATION\s0 \s-1FILE\s0 \s-1OPTIONS\s0\fR
below.
.IP "\fBentropy_cl.so\fR" 4
.IX Item "entropy_cl.so"
This client plugin accepts multicasted random data, as
provided by \fBentropy_hw.so\fR, and adds it to the local
entropy pool using \fBioctl\fR() on the device specified by
the \fBDevice\fR option in \fBentropy_cl.conf\fR.  Since \fBhwmultd\fR
drops privileges on startup, it must be configured to run with
sufficient privileges to execute \fBioctl\fR(..., \s-1RNDADDENTROPY\s0, ...).
Usually means root privileges \-\-\- see the \fBUser\fR option
in \fB\s-1MAIN\s0 \s-1CONFIGURATION\s0 \s-1FILE\s0 \s-1OPTIONS\s0\fR below.
.IP "\fBexample_hw.so\fR" 4
.IX Item "example_hw.so"
This is an example server plugin which simply multicasts
the message set by the \fBMessage\fR option in \fBexample_hw.conf\fR.
.IP "\fBexample_cl.so\fR" 4
.IX Item "example_cl.so"
xxx
.IP "\fBnull_hw.so\fR" 4
.IX Item "null_hw.so"
This is the \*(L"do nothing\*(R" hardware plugin.  It simulates
a device which always successfully (re)opens and closes,
and returns a null string when read.
.IP "\fBnull_cl.so\fR" 4
.IX Item "null_cl.so"
This is the \*(L"do nothing\*(R" client plugin.  It accepts any
input read from the multicast and returns a null string
as its result.  It always success (re)opens and closes.
.IP "\fBscript_hw.so\fR" 4
.IX Item "script_hw.so"
xxx
.IP "\fBscript_cl.so\fR" 4
.IX Item "script_cl.so"
xxx
.IP "\fBtemp_hw.so\fR" 4
.IX Item "temp_hw.so"
xxx
.IP "\fBtime_hw.so\fR" 4
.IX Item "time_hw.so"
xxx
.RE
.RS 4
.RE
.IP "\fI/etc/hwmultd/scripts/\fR" 4
.IX Item "/etc/hwmultd/scripts/"
The directory where scripts used by the \fIscript_hw.so\fR and
\&\fIscript_cl.so\fR plugins are stored.
.SS "\s-1MAIN\s0 \s-1CONFIGURATION\s0 \s-1FILE\s0 \s-1OPTIONS\s0"
.IX Subsection "MAIN CONFIGURATION FILE OPTIONS"
The following is a list of options recognized by the main configuration
file, \fB/etc/hwmultd/hwmultd.conf\fR.
.IP "\fBDebug\fR" 4
.IX Item "Debug"
Default 2
.IP "\fBMulticastIP\fR" 4
.IX Item "MulticastIP"
Default 239.252.67.151
.IP "\fBPort\fR" 4
.IX Item "Port"
Default 8000
.IP "\fBServer\fR" 4
.IX Item "Server"
0 = client mode, 1 = server mode, 2 = both Defaults to 0
.IP "\fBUser\fR" 4
.IX Item "User"
Default hwmultd
.IP "\fBTiming\fR" 4
.IX Item "Timing"
Default 1
.IP "\fBSourceIP\fR" 4
.IX Item "SourceIP"
Default 0.0.0.0
.IP "\fBInterface\fR" 4
.IX Item "Interface"
No default.  It defers to SourceIP if not set.
.IP "\fBHWPlugin\fR" 4
.IX Item "HWPlugin"
Default null, the do nothing hardware plugin.
.IP "\fBCLPlugin\fR" 4
.IX Item "CLPlugin"
Default null, the do nothing client plugin.
.SH "BUGS"
.IX Header "BUGS"
Please report bugs at <http://opensource.dyc.edu/bugzilla3>
.SH "AUTHOR"
.IX Header "AUTHOR"
Anthony G. Basile <basile at opensource dot dyc dot edu>
