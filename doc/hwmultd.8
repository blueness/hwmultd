.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HWMULTD 8"
.TH HWMULTD 8 "2011-07-19" "hwmultd 0.1" "SYSTEM ADMINISTRATION COMMANDS"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
hwmultd \- multicast hardware information, or respond to mutlicasted
hardware information
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBhwmultd\fR [\-h] [\-v] [\-c \fIconfig\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBhwmultd\fR operates in one of two modes (or both).  As a server,
\&\fBhwmultd\fR monitors hardware information and multicasts it so that
other computers in the same multicast group can act accordingly.  As a
client, \fBhwmultd\fR listens to multicasted hardware information and acts
accordingly.  For example, one box (the server) can multicast entropy
while others listening (the clients) can add it to their own entropy
pools.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fBno option\fR" 4
.IX Item "no option"
This is the normal mode of operation.  \fBhwmultd\fR reads its
configuration file, drops root privileges, opens its log and
pid file and forks into the background as a daemon.
.IP "\fB\-c config\fR" 4
.IX Item "-c config"
Use an alternate configuration file instead of the default
\&\fI/etc/hwmultd/hwmultd.conf\fR.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Do not fork into the background.  Print out information about
command line options and exit.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Do not fork into the background.  Print out version information
and exit.
.SH "SIGNALS"
.IX Header "SIGNALS"
\&\fBhwmultd\fR responds to three signals \fI\s-1SIGTERM\s0\fR, \fI\s-1SIGHUP\s0\fR and
\&\fI\s-1SIGUSR1\s0\fR.  All others blockable signals are masked.
.IP "\fI\s-1SIGTERM\s0\fR" 4
.IX Item "SIGTERM"
Exit cleanly.  Close all sockets, file descriptors and
unlink the pid file.
.IP "\fI\s-1SIGHUP\s0\fR" 4
.IX Item "SIGHUP"
Reread the configuration file(s) and, depending on what mode
\&\fBhwmultd\fR is running in, restart the multicast client, server
or both.
.IP "\fI\s-1SIGUSR1\s0\fR" 4
.IX Item "SIGUSR1"
Reset the plugin hardware.  Depending on how the plugin works
with its hardware, this signal will instruct it to close and
reopen the hardware device.  This is useful in case the hardware
has gotten into a bad state.
.SH "FILES"
.IX Header "FILES"
.IP "\fI/etc/hwmultd/hmultd.conf\fR" 4
.IX Item "/etc/hwmultd/hmultd.conf"
The daemon's main configuration file.  Each line is interpreted as
case sensitive, white space delimited, \fBkey\fR \fBvalue\fR pairs.  Malformed
lines are ignored.  Anything after an octothorpe '#' is also ignored.
A missing \fBkey\fR \fBvalue\fR's is interpreted as \*(L"use the default value\*(R".
.IP "\fI/etc/hwmultd/plugin_mode.conf\fR" 4
.IX Item "/etc/hwmultd/plugin_mode.conf"
Per plugin configuration file(s).  Its format is the same as that of
the main configuration file.  The filename \fIplugin_mode.conf\fR
must correspond to the filename \fIplugin_molde.so\fR of the plugin that
consumes it.
.IP "\fI/usr/lib/hwmultd/\fR" 4
.IX Item "/usr/lib/hwmultd/"
The directory where \fBhwmultd\fR searches for its plugins.  Plugin
names have the form \fIplugin_mode.so\fR where \fIplugin\fR is the name,
and \fImode\fR is either \fIhw\fR for server mode (ie. read hardware and
multicast), or \fIcl\fR for client mode (ie. read multicated information
and act accordingly).
.Sp
The number of plugins is growing.  Current plugins are
.RS 4
.IP "\fBentropy_hw.so\fR" 4
.IX Item "entropy_hw.so"
This server plugin reads some entropy device, by default
\&\fI/dev/urandom\fR, and multicasts random data.  It is
configured by \fBentropy_hw.conf\fR which takes two options,
\&\fBDevice\fR which specifies the device, and \fBBytes\fR which
specifies the number of bytes to read per cycle.  See
the \fBTiming\fR option in \fB\s-1MAIN\s0 \s-1CONFIGURATION\s0 \s-1FILE\s0 \s-1OPTIONS\s0\fR
below.
.IP "\fBentropy_cl.so\fR" 4
.IX Item "entropy_cl.so"
This client plugin accepts multicasted random data, as
provided by \fBentropy_hw.so\fR, and adds it to the local
entropy pool using \fBioctl\fR() on the device specified by
the \fBDevice\fR option in \fBentropy_cl.conf\fR.  Since \fBhwmultd\fR
drops privileges on startup, it must be configured to run with
sufficient privileges to execute \fBioctl\fR(..., \s-1RNDADDENTROPY\s0, ...).
Usually means root privileges.  See the \fBUser\fR option
in \fB\s-1MAIN\s0 \s-1CONFIGURATION\s0 \s-1FILE\s0 \s-1OPTIONS\s0\fR below.
.IP "\fBexample_hw.so\fR" 4
.IX Item "example_hw.so"
This is an example server plugin which multicasts the
message set by the \fBMessage\fR option in \fBexample_hw.conf\fR.
.IP "\fBexample_cl.so\fR" 4
.IX Item "example_cl.so"
This is an example client plugin which receives a
multicasted message but does nothing with it.  It logs a
string set by the \fBMessage\fR option in \fBexample_cl.conf\fR.
.IP "\fBnull_hw.so\fR" 4
.IX Item "null_hw.so"
This is the \*(L"do nothing\*(R" hardware plugin.  It simulates
a device which always successfully (re)opens and closes,
and returns a null string when read.
.IP "\fBnull_cl.so\fR" 4
.IX Item "null_cl.so"
This is the \*(L"do nothing\*(R" client plugin.  It receives
a multicated message and returns a null string as its
result.  It always successfully (re)opens and closes.
.IP "\fBscript_hw.so\fR" 4
.IX Item "script_hw.so"
This server plugin runs a script specified by the \fBScript\fR
option in \fBscript_hw.conf\fR.  \fBhwmultd\fR searches for the
script in the directory \fI/etc/hwmultd/scripts/\fR.  The
script should query some hardware device or perform some
other task and return a string which is multicasted.
.IP "\fBscript_cl.so\fR" 4
.IX Item "script_cl.so"
This client plugin runs a script specified by the \fBScript\fR
option in \fBscript_cl.conf\fR.  \fBhwmultd\fR searches for the
script in the directory \fI/etc/hwmultd/scripts/\fR.  Any
received message is passed to the script as a paramter for
processing.  Whatever string is returned by the script on
exit is logged.
.IP "\fBtemp_hw.so\fR" 4
.IX Item "temp_hw.so"
This server plugin queries a \s-1USB\s0 to serial converter device
specified by the \fBDevice\fR option in \fBtemp_hw.conf\fR.  Typically
these devices show up as \fI/dev/ttyUSB0\fR.  It queries the
device using the Temperature \f(CW@lert\fR (\s-1TM\s0) protocol and multicasts
the temperature in Celsius.
.IP "\fBtime_hw.so\fR" 4
.IX Item "time_hw.so"
This server plugin multicasts the localtime on the server in
human readable format, [%d/%b/%Y:%X \f(CW%z\fR].  See \fIdate\fR\|(1) format
details.
.RE
.RS 4
.RE
.IP "\fI/etc/hwmultd/scripts/\fR" 4
.IX Item "/etc/hwmultd/scripts/"
The directory where scripts used by the \fBscript_hw.so\fR and
\&\fBscript_cl.so\fR plugins are stored.  Currently, \fBhwmultd\fR
ships with several sample scripts.  In particular, shutdown.sh
is useful as a client script in conjunction with a server running
\&\fBtemp_hw.so\fR.
.SS "\s-1MAIN\s0 \s-1CONFIGURATION\s0 \s-1FILE\s0 \s-1OPTIONS\s0"
.IX Subsection "MAIN CONFIGURATION FILE OPTIONS"
The following is a list of options recognized by the main configuration
file, \fB/etc/hwmultd/hwmultd.conf\fR.
.IP "\fBDebug\fR" 4
.IX Item "Debug"
The level of logging informtion.  Four levels are recognized, numbered
0 through 3.  A Debug level of 0 is most terse, logging only \fB\s-1CRITICAL\s0\fR
errors which necessarily lead to a shutdown of \fBhwmultd\fR.  A level of 1 
logs important \fB\s-1ERROR\s0\fR which do not necessarily cause a shutdown, but
seriously hamper its function.  A level of 2 logs \fB\s-1INFORMATION\s0\fR which
specifies the current state of the system.  This is the default level.
Finally, a level of 3 is most verbose and logs details which are useful
to \fB\s-1DEBUG\s0\fR the system.  Logging at a given level includes all the lower
levels.
.IP "\fBMulticastIP\fR" 4
.IX Item "MulticastIP"
The multicast address.  This arbitrarily defaults to 239.252.67.151, but
any address in the Organization-Local Scope, 239.0.0.0\-239.255.255.255,
will do.  See \s-1RFC2365\s0.
.IP "\fBPort\fR" 4
.IX Item "Port"
The multicast port.  This defaults to 8000.
.IP "\fBMode\fR" 4
.IX Item "Mode"
This is the mode in which \fBhwmultd\fR will operate.  A value of 0
indicates that \fBhwmultd\fR will only act as a client, accepting
multicasted data and acting accordingly.  A value of 1 indicates
that it will act only as a server, reading hardware information
and multicasting it.  A value of 2 means that it will act as both.
In other words, not only will \fBhwmultd\fR multicast its hardware
information, but it will also pass that information internally to
its client plugin and act accordning.  The default is 0.
.IP "\fBUser\fR" 4
.IX Item "User"
The user as which \fBhwmultd\fR will run after it drops privileges.
The default user is hwmultd, but if it doesn't exist on the system,
then \fBhwmultd\fR will run as root.
.IP "\fBTiming\fR" 4
.IX Item "Timing"
In server mode, the delay in seconds between subsequent reads from
the hardware device and multicastings.  This defaults to its minimum
possible values of 1 which may be too aggressive for some uses.
.IP "\fBSourceIP\fR" 4
.IX Item "SourceIP"
In server mode, the source \s-1IP\s0 address for the multicast packets.
This is a useful option on systems with two or network interfaces.
If the multicastings are to only be directed down one subnet,
this option can be used to select the desired interface.  This
defaults to 0.0.0.0, which means \*(L"bind to the first available
interface.\*(R"
.IP "\fBInterface\fR" 4
.IX Item "Interface"
In server mode, this is an alternative to using \fBSourceIP\fR to
choose the network interface.  One should set either \fBSourceIP\fR
or \fBInterface\fR, but if both are set, then \fBSourceIP\fR is used.
This option has no default value.  If it is missing, then the
\&\fBhwmultd\fR defers to using \fBSourceIP\fR.
.IP "\fBHWPlugin\fR" 4
.IX Item "HWPlugin"
The server plugin to use.  If not set, it will default to
\&\fBnull_hw.so\fR.
.IP "\fBCLPlugin\fR" 4
.IX Item "CLPlugin"
The client plugin to use.  If not set, it will default to
\&\fBnull_cl.so\fR.
.SH "BUGS"
.IX Header "BUGS"
Please report bugs at <http://opensource.dyc.edu/bugzilla3>.
.PP
Currently there is no security.  A client can easily be fooled
into acting on falsified multicasted information.  \s-1DO\s0 \s-1NOT\s0 \s-1USE\s0
\&\s-1ON\s0 \s-1AN\s0 \s-1INSECURE\s0 \s-1NETWORK\s0!
.SH "AUTHOR"
.IX Header "AUTHOR"
Anthony G. Basile <basile at opensource dot dyc dot edu>
